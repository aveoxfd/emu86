#ifndef BUS_H
#define BUS_H

#include "types.h"

#define MAX_DEVICE_COUNT_MACRO 16

typedef enum {
    MEM_READ = 0,
    MEM_WRITE = 1,
    IO_READ = 2,
    IO_WRITE = 3,
    INTERRUPT_ACK = 4
}BusControl;

typedef struct {
    // physical lines
    uint_32 address_bus;        //20-bit for real mode
    uint_16 data_bus;           //16-bit data bus
    BusControl control_bus;     //control signals
    
    //devices connected to the bus (do not know about each other)
    uint_8* ram;           //main memory
    unsigned long long ram_size;
    
    struct {
        void* device;
        uint_32 base_addr;
        uint_32 size;
        uint_8 (*read)(void* device, uint_32 addr);
        void (*write)(void* device, uint_32 addr, uint_8 value);
    } devices[16];
    int device_count;
    
}Bus;

void bus_init(Bus* bus, uint_8 *ram, unsigned long long ram_size);
void bus_attach_device(Bus *bus, void *device, uint_32 base_addr, uint_32 size, uint_8 (*read)(void*, uint_32), void (*write)(void*, uint_32, uint_8));
uint_16 bus_cycle(Bus *bus, uint_32 address, BusControl control, uint_16 data);

#endif